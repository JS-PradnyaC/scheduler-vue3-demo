{"remainingRequest":"C:\\Users\\Vaibhav\\vue-scheduler-demo\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Vaibhav\\vue-scheduler-demo\\src\\components\\Scheduler.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\Vaibhav\\vue-scheduler-demo\\src\\components\\Scheduler.vue","mtime":1652970316300},{"path":"C:\\Users\\Vaibhav\\vue-scheduler-demo\\node_modules\\css-loader\\dist\\cjs.js","mtime":1652972012446},{"path":"C:\\Users\\Vaibhav\\vue-scheduler-demo\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1652972020394},{"path":"C:\\Users\\Vaibhav\\vue-scheduler-demo\\node_modules\\postcss-loader\\src\\index.js","mtime":1650909541159},{"path":"C:\\Users\\Vaibhav\\vue-scheduler-demo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1652970752074},{"path":"C:\\Users\\Vaibhav\\vue-scheduler-demo\\node_modules\\vue-loader\\lib\\index.js","mtime":1652972017660}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKQGltcG9ydCAifmRodG1seC1zY2hlZHVsZXIvY29kZWJhc2UvZGh0bWx4c2NoZWR1bGVyX21hdGVyaWFsLmNzcyI7Cg=="},{"version":3,"sources":["Scheduler.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyDA","file":"Scheduler.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div ref=\"scheduler\"></div>\r\n</template>\r\n \r\n<script>\r\nimport 'dhtmlx-scheduler'\r\nexport default {\r\n  name: 'scheduler',\r\n  props: {\r\n    events: {\r\n      type: Array,\r\n      default () {\r\n        return {events: []}\r\n      }\r\n    }\r\n  },\r\n \r\n methods: {\r\n    $_initSchedulerEvents: function() {\r\n      if (!scheduler.$_eventsInitialized) {\r\n          \r\n        scheduler.attachEvent(\"onEventAdded\", (id, ev) => {\r\n            this.$emit(\"event-updated\", id, \"inserted\", ev);\r\n        });\r\n        scheduler.attachEvent(\"onEventChanged\", (id, ev) => {\r\n            this.$emit(\"event-updated\", id, \"updated\", ev);\r\n        });\r\n        scheduler.attachEvent(\"onEventDeleted\", (id, ev) => {\r\n            this.$emit(\"event-updated\", id, \"deleted\");\r\n        });\r\n\r\n        scheduler.$_eventsInitialized = true;\r\n      }\r\n    },\r\n },\r\n\r\n  mounted: function () {\r\n    scheduler.skin = \"material\";\r\n    scheduler.config.header = [\r\n        \"day\",\r\n        \"week\",\r\n        \"month\",\r\n        \"date\",\r\n        \"prev\",\r\n        \"today\",\r\n        \"next\"\r\n    ];\r\n\r\n    this.$_initSchedulerEvents();\r\n\r\n    scheduler.init(this.$refs.scheduler, new Date(2020, 0, 20), \"week\");\r\n    scheduler.parse(this.$props.events);\r\n  }\r\n}\r\n</script>\r\n \r\n<style>\r\n    @import \"~dhtmlx-scheduler/codebase/dhtmlxscheduler_material.css\";\r\n</style>\r\n"]}]}